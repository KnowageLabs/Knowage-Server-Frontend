{
      "dataPreparation": {
          "abs": "Trả về giá trị tuyệt đối của giá trị số.",
          "acos": "Trả về arccos (hay còn gọi là arc cosine) của biểu thức, tương tự như cách tính bằng java.lang.Math.acos.",
          "add_months": "Trả về ngày sau ngày bắt đầu (start_date) một số tháng (num_months).",
          "approx_percentile": "Trả về giá trị phần trăm gần đúng của cột số col, là giá trị nhỏ nhất trong các giá trị của col đã được sắp xếp (từ nhỏ đến lớn) sao cho không quá percentage các giá trị của col nhỏ hơn hoặc bằng giá trị đó. Giá trị của percentage phải nằm giữa 0.0 và 1.0. Tham số accuracy (mặc định: 10000) là một số nguyên dương điều khiển độ chính xác của phép tính gần đúng, đánh đổi bằng bộ nhớ. Giá trị accuracy càng cao thì độ chính xác càng tốt, 1.0/accuracy là sai số tương đối của phép tính gần đúng. Khi percentage là một mảng, mỗi giá trị của mảng percentage phải nằm giữa 0.0 và 1.0. Trong trường hợp này, trả về mảng giá trị phần trăm gần đúng của cột col tại mảng percentage đã cho.",
          "asin": "Trả về arcsin (hay còn gọi là arc sine) của biểu thức, tương tự như cách tính bằng java.lang.Math.asin.",
          "atan": "Trả về arctan (hay còn gọi là arc tangent) của biểu thức, tương tự như cách tính bằng java.lang.Math.atan.",
          "avg": "Trả về giá trị trung bình được tính từ các giá trị của một nhóm.",
          "casewhen": "Khi biểu thức 1 (expr1) = đúng, trả về biểu thức 2 (expr2); ngược lại, khi biểu thức 3 (expr3) = đúng, trả về biểu thức 4 (expr4); nếu không, trả về biểu thức 5 (expr5). Tham số: <br> expr1, expr3 - Các biểu thức điều kiện nhánh phải có kiểu boolean. <br> expr2, expr4, expr5 - Các biểu thức giá trị nhánh và biểu thức giá trị else phải có cùng kiểu hoặc có thể ép kiểu về một kiểu chung.",
          "char_length": "Trả về độ dài ký tự của dữ liệu chuỗi hoặc số byte của dữ liệu nhị phân. Độ dài của dữ liệu chuỗi bao gồm cả khoảng trắng ở cuối. Độ dài của dữ liệu nhị phân bao gồm cả các số không nhị phân.",
          "coalesce": "Trả về đối số khác null đầu tiên nếu tồn tại. Nếu không, trả về null.",
          "concat": "Trả về chuỗi được nối từ col1, col2, ..., colN.",
          "cos": "Trả về cosin của biểu thức, tương tự như cách tính bằng java.lang.Math.cos.",
          "current_date": "Trả về ngày hiện tại tại thời điểm bắt đầu đánh giá truy vấn.",
          "current_timestamp": "Trả về dấu thời gian hiện tại tại thời điểm bắt đầu đánh giá truy vấn.",
          "date_add": "Trả về ngày sau ngày bắt đầu (start_date) một số ngày (num_days).",
          "date_sub": "Trả về ngày trước ngày bắt đầu (start_date) một số ngày (num_days).",
          "date_trunc": "Trả về dấu thời gian (timestamp) ts được cắt ngắn đến đơn vị được chỉ định bởi định dạng fmt. fmt phải là một trong các giá trị sau: [\"YEAR\", \"YYYY\", \"YY\", \"MON\", \"MONTH\", \"MM\", \"DAY\", \"DD\", \"HOUR\", \"MINUTE\", \"SECOND\", \"WEEK\", \"QUARTER\"]",
          "datediff": "Trả về số ngày từ ngày bắt đầu (startDate) đến ngày kết thúc (endDate).",
          "day": "Trả về ngày trong tháng của ngày/dấu thời gian.",
          "dayofmonth": "Trả về ngày trong tháng của ngày/dấu thời gian.",
          "dayofweek": "Trả về ngày trong tuần của ngày/dấu thời gian (1 = Chủ nhật, 2 = Thứ hai, ..., 7 = Thứ bảy).",
          "dayofyear": "Trả về ngày trong năm của ngày/dấu thời gian.",
          "dense_rank": "Tính toán thứ hạng của một giá trị trong một nhóm các giá trị. Kết quả là một cộng với giá trị thứ hạng được gán trước đó. Không giống như hàm rank, dense_rank sẽ không tạo ra khoảng trống trong chuỗi xếp hạng.",
          "element_at": "Trả về phần tử của mảng tại chỉ mục (index) đã cho (bắt đầu từ 1). Nếu index < 0, truy cập các phần tử từ cuối đến đầu. Trả về NULL nếu chỉ mục vượt quá độ dài của mảng.",
          "element_at2": "Trả về giá trị cho khóa (key) đã cho, hoặc NULL nếu khóa không có trong map.",
          "exists": "Kiểm tra xem một vị từ (predicate) có đúng với một hoặc nhiều phần tử trong mảng hay không.",
          "exp": "Trả về e mũ expr.",
          "factorial": "Trả về giai thừa của expr. expr phải nằm trong khoảng [0..20]. Nếu không, trả về null.",
          "floor": "Trả về số nguyên lớn nhất không lớn hơn expr.",
          "format_string": "Trả về một chuỗi được định dạng từ các chuỗi định dạng kiểu printf.",
          "hint": "Nhấp vào một trong các hàm được liệt kê để biết thêm thông tin về hàm đó.",
          "hour": "Trả về thành phần giờ của chuỗi/dấu thời gian.",
          "if": "Nếu expr1 đánh giá là đúng, thì trả về expr2; nếu không, trả về expr3.",
          "last_day": "Trả về ngày cuối cùng của tháng mà ngày thuộc về.",
          "lcase": "Trả về chuỗi str với tất cả các ký tự được chuyển thành chữ thường.",
          "left": "Trả về len (len có thể là kiểu chuỗi) ký tự bên trái nhất từ chuỗi str, nếu len nhỏ hơn hoặc bằng 0 thì kết quả là một chuỗi rỗng.",
          "length": "Trả về độ dài ký tự của dữ liệu chuỗi hoặc số byte của dữ liệu nhị phân. Độ dài của dữ liệu chuỗi bao gồm cả khoảng trắng ở cuối. Độ dài của dữ liệu nhị phân bao gồm cả các số không nhị phân.",
          "ln": "Trả về logarit tự nhiên (cơ số e) của expr.",
          "locate": "Trả về vị trí của lần xuất hiện đầu tiên của chuỗi con substr trong chuỗi str sau vị trí pos. Vị trí pos đã cho và giá trị trả về được tính từ 1.",
          "log": "Trả về logarit của expr với cơ số base.",
          "lower": "Trả về chuỗi str với tất cả các ký tự được chuyển thành chữ thường.",
          "lpad": "Trả về chuỗi str, được đệm bên trái bằng pad đến độ dài len. Nếu str dài hơn len, giá trị trả về sẽ được rút ngắn thành len ký tự.",
          "ltrim1": "Loại bỏ các ký tự khoảng trắng ở đầu chuỗi str.",
          "ltrim2": "Loại bỏ chuỗi ở đầu chứa các ký tự từ chuỗi trim.",
          "max": "Trả về giá trị lớn nhất của expr.",
          "mean": "Trả về giá trị trung bình được tính từ các giá trị của một nhóm.",
          "min": "Trả về giá trị nhỏ nhất của expr.",
          "minute": "Trả về thành phần phút của chuỗi/dấu thời gian.",
          "mod": "Trả về số dư sau phép chia expr1/expr2.",
          "month": "Trả về thành phần tháng của ngày/dấu thời gian.",
          "months_between": "Nếu dấu thời gian 1 (timestamp1) muộn hơn dấu thời gian 2 (timestamp2), thì kết quả là dương. Nếu timestamp1 và timestamp2 cùng ngày trong tháng hoặc cả hai đều là ngày cuối cùng của tháng, thì thời gian trong ngày sẽ bị bỏ qua. Nếu không, sự khác biệt được tính dựa trên 31 ngày mỗi tháng và được làm tròn đến 8 chữ số trừ khi roundOff=false.",
          "next_day": "Trả về ngày đầu tiên sau ngày bắt đầu (start_date) và được chỉ định.",
          "not": "Phủ định logic.",
          "nullif": "Trả về null nếu expr1 bằng expr2, hoặc expr1 nếu không.",
          "nvl": "Trả về expr2 nếu expr1 là null, hoặc expr1 nếu không.",
          "percent_rank": "Tính toán thứ hạng phần trăm của một giá trị trong một nhóm các giá trị.",
          "percentile1": "Trả về giá trị phần trăm chính xác của cột số col tại percentage đã cho. Giá trị của percentage phải nằm giữa 0.0 và 1.0. Giá trị của frequency phải là số nguyên dương.",
          "percentile2": "Trả về mảng giá trị phần trăm chính xác của cột số col tại percentage(s) đã cho. Mỗi giá trị của mảng percentage phải nằm giữa 0.0 và 1.0. Giá trị của frequency phải là số nguyên dương.",
          "pow": "Nâng expr1 lên lũy thừa của expr2.",
          "quarter": "Trả về quý trong năm của ngày, trong phạm vi từ 1 đến 4.",
          "replace": "Thay thế tất cả các lần xuất hiện của search bằng replace.",
          "round": "Trả về expr được làm tròn đến d chữ số thập phân bằng cách sử dụng chế độ làm tròn HALF_UP.",
          "rtrim1": "Loại bỏ các ký tự khoảng trắng ở cuối chuỗi str.",
          "rtrim2": "Loại bỏ chuỗi ở cuối chứa các ký tự từ chuỗi trim từ chuỗi str.",
          "second": "Trả về thành phần giây của chuỗi/dấu thời gian.",
          "sha": "Trả về giá trị băm sha1 dưới dạng chuỗi hex của expr.",
          "sin": "Trả về sin của biểu thức, tương tự như cách tính bằng java.lang.Math.sin.",
          "skewness": "Trả về giá trị độ lệch được tính từ các giá trị của một nhóm.",
          "stddev": "Trả về độ lệch chuẩn mẫu được tính từ các giá trị của một nhóm.",
          "stddev_pop": "Trả về độ lệch chuẩn tổng thể được tính từ các giá trị của một nhóm.",
          "stddev_samp": "Trả về độ lệch chuẩn mẫu được tính từ các giá trị của một nhóm.",
          "substr": "Trả về chuỗi con của chuỗi str bắt đầu tại vị trí pos và có độ dài len, hoặc slice của mảng byte bắt đầu tại pos và có độ dài len.",
          "tan": "Trả về tang của biểu thức, tương tự như cách tính bằng java.lang.Math.tan.",
          "timestamp": "Ép kiểu giá trị expr sang kiểu dữ liệu dấu thời gian (timestamp).",
          "to_date": "Phân tích cú pháp biểu thức date_str với biểu thức fmt thành một ngày. Trả về null với đầu vào không hợp lệ. Theo mặc định, nó tuân theo các quy tắc ép kiểu thành một ngày nếu fmt bị bỏ qua.",
          "to_timestamp": "Phân tích cú pháp biểu thức timestamp_str với biểu thức fmt thành một dấu thời gian. Trả về null với đầu vào không hợp lệ. Theo mặc định, nó tuân theo các quy tắc ép kiểu thành một dấu thời gian nếu fmt bị bỏ qua.",
          "trim": "trim(str) - Loại bỏ các ký tự khoảng trắng ở đầu và cuối chuỗi str. <br>        trim(BOTH trimStr FROM str) - Loại bỏ các ký tự trimStr ở đầu và cuối chuỗi str <br>        trim(LEADING trimStr FROM str) - Loại bỏ các ký tự trimStr ở đầu chuỗi str <br>        trim(TRAILING trimStr FROM str) - Loại bỏ các ký tự trimStr ở cuối chuỗi str <br>        Tham số: <br>        str - một biểu thức chuỗi <br>        trimStr - các ký tự chuỗi trim để cắt, giá trị mặc định là một khoảng trắng đơn <br>        BOTH, FROM - đây là các từ khóa để chỉ định cắt các ký tự chuỗi từ cả hai đầu của chuỗi <br>        LEADING, FROM - đây là các từ khóa để chỉ định cắt các ký tự chuỗi từ đầu bên trái của chuỗi <br>        TRAILING, FROM - đây là các từ khóa để chỉ định cắt các ký tự chuỗi từ đầu bên phải của chuỗi",
          "ucase": "Trả về chuỗi str với tất cả các ký tự được chuyển thành chữ hoa.",
          "upper": "Trả về chuỗi str với tất cả các ký tự được chuyển thành chữ hoa.",
          "variance": "Trả về phương sai mẫu được tính từ các giá trị của một nhóm.",
          "weekday": "Trả về ngày trong tuần của ngày/dấu thời gian (0 = Thứ hai, 1 = Thứ ba, ..., 6 = Chủ nhật).",
          "weekofyear": "Trả về tuần trong năm của ngày đã cho. Một tuần được coi là bắt đầu vào Thứ Hai và tuần 1 là tuần đầu tiên có > 3 ngày.",
          "year": "Trả về thành phần năm của ngày/dấu thời gian."
      }
  }